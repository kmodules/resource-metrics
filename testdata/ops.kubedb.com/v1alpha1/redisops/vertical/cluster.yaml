apiVersion: ops.kubedb.com/v1alpha1
kind: RedisOpsRequest
metadata:
  name: redisops-vertical
  namespace: demo
spec:
  type: VerticalScaling
  databaseRef:
    name: redis-cluster
    referencedDB:
      apiVersion: kubedb.com/v1alpha2
      kind: Redis
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: |
            {"apiVersion":"kubedb.com/v1alpha2","kind":"Redis","metadata":{"annotations":{},"name":"redis-cluster","namespace":"demo"},"spec":{"cluster":{"master":3,"replicas":1},"mode":"Cluster","podTemplate":{"spec":{"resources":{"requests":{"cpu":"100m","memory":"100Mi"}}}},"storage":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}},"storageClassName":"standard"},"storageType":"Durable","terminationPolicy":"Halt","version":"7.0.5"}}
        creationTimestamp: "2023-10-12T09:52:08Z"
        finalizers:
          - kubedb.com
        generation: 2
        name: redis-cluster
        namespace: demo
        resourceVersion: "222802"
        uid: 7e4b1e1c-84c2-4533-af06-e974770f746f
      spec:
        allowedSchemas:
          namespaces:
            from: Same
        authSecret:
          name: redis-cluster-auth
        autoOps: { }
        cluster:
          master: 3
          replicas: 1
        coordinator:
          resources: { }
        healthChecker:
          failureThreshold: 1
          periodSeconds: 10
          timeoutSeconds: 10
        mode: Cluster
        podTemplate:
          controller: { }
          metadata: { }
          spec:
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app.kubernetes.io/instance: redis-cluster
                          app.kubernetes.io/managed-by: kubedb.com
                          app.kubernetes.io/name: redises.kubedb.com
                          redis.kubedb.com/shard: ${SHARD_INDEX}
                      namespaces:
                        - demo
                      topologyKey: kubernetes.io/hostname
                    weight: 100
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app.kubernetes.io/instance: redis-cluster
                          app.kubernetes.io/managed-by: kubedb.com
                          app.kubernetes.io/name: redises.kubedb.com
                          redis.kubedb.com/shard: ${SHARD_INDEX}
                      namespaces:
                        - demo
                      topologyKey: failure-domain.beta.kubernetes.io/zone
                    weight: 50
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 100m
                memory: 100Mi
            serviceAccountName: redis-cluster
        replicas: 1
        storage:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: standard
        storageType: Durable
        terminationPolicy: Halt
        version: 7.0.5
  verticalScaling:
    redis:
      requests:
        memory: "300Mi"
        cpu: "200m"
      limits:
        memory: "800Mi"
        cpu: "500m"